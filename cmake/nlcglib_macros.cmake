MACRO(NLCGLIB_SETUP_TARGET _target)
  add_dependencies(${_target} nlcglib_internal)
  # message("INTERNAL LIB LOC: ${nlcglib_internal_location}")
  target_link_libraries(${_target} PRIVATE ${nlcglib_internal_location})
  target_link_libraries(${_target} PRIVATE Kokkos::kokkoscore)
  target_link_libraries(${_target} PRIVATE ${LAPACK_LIBRARIES})
  target_link_libraries(${_target} PRIVATE MPI::MPI_CXX)
  if(USE_OPENMP)
    target_link_libraries(${_target} PRIVATE OpenMP::OpenMP_CXX)
  endif()

  if(${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
    target_compile_definitions(${_target} PRIVATE __CLANG)
  endif()
  target_include_directories(${_target} PRIVATE ${CMAKE_SOURCE_DIR}/src)
  target_include_directories(${_target} PRIVATE ${CMAKE_SOURCE_DIR}/include)
  target_link_libraries(${_target} PRIVATE ${CUDA_CUBLAS_LIBRARIES} ${CUDA_cusolver_LIBRARY})
  target_compile_definitions(${_target} PUBLIC $<$<BOOL:${USE_OPENMP}>:__USE_OPENMP>)
  if(LAPACK_VENDOR MATCHES MKL)
    target_compile_definitions(${_target} PUBLIC __USE_MKL)
    target_link_libraries(${_target}  PRIVATE mkl::mkl_intel_32bit_omp_dyn)
  else()
    target_link_libraries(${_target} PRIVATE my_lapack)
  endif()
  target_compile_definitions(${_target} PUBLIC $<$<BOOL:${USE_OPENMP}>:__USE_OPENMP>)
ENDMACRO()
